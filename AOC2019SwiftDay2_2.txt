import Foundation

let originalArray = [1,0,0,3,1,1,2,3,1,3,4,3,1,5,0,3,2,13,1,19,1,19,6,23,1,23,6,27,1,13,27,31,2,13,31,35,1,5,35,39,2,39,13,43,1,10,43,47,2,13,47,51,1,6,51,55,2,55,13,59,1,59,10,63,1,63,10,67,2,10,67,71,1,6,71,75,1,10,75,79,1,79,9,83,2,83,6,87,2,87,9,91,1,5,91,95,1,6,95,99,1,99,9,103,2,10,103,107,1,107,6,111,2,9,111,115,1,5,115,119,1,10,119,123,1,2,123,127,1,127,6,0,99,2,14,0,0]

// Main func from Day2-1
func generateResult(inputArray: [Int]) -> Bool {
    var array = inputArray
    let endNum = array.count
    let interval = 4
    var resultFound = false
    
    for index in stride(from: 0, to: endNum, by: interval) {
        
        let opcode = array[index]
        
        if opcode == 1 {
            let p1 = array[index + 1]
            let p2 = array[index + 2]
            let stp = array[index + 3]
            array[stp] = array[p1] + array[p2]

        } else if opcode == 2 {
            let p1 = array[index + 1]
            let p2 = array[index + 2]
            let stp = array[index + 3]
            array[stp] = array[p1] * array[p2]
            
        } else if opcode == 99 {

            if array[0] == 19690720 {
                print(array[1], array[2])
                resultFound = true
                break
            }
            break
        } else {
            print("Something goes wrong. Error: \(opcode)")
        }
    }
    return resultFound
}

// A for loop to run new array
outerLoop: for n1 in 0...99 {
    for n2 in 0...99 {
        
        var newArray = originalArray
        newArray[1] = n1
        newArray[2] = n2
        
        if generateResult(inputArray: newArray) == true {
            break outerLoop
        }
        
    }
    
}
